<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowser.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>